plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.winus'
version = '0.0.1-SNAPSHOT'
description = 'winus-express for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(25)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Database - Oracle JDBC Driver (최신 버전)
	implementation 'com.oracle.database.jdbc:ojdbc11:23.4.0.24.05'

	// HikariCP - Spring Boot의 기본 커넥션 풀 (spring-boot-starter-jdbc에 포함됨)
	// 명시적으로 버전 관리가 필요한 경우 아래 주석을 해제
	// implementation 'com.zaxxer:HikariCP:5.1.0'

	// Oracle XML Parser - XML 데이터 타입 사용시 필요 (선택사항)
	implementation 'com.oracle.database.xml:xdb:23.4.0.24.05'
	implementation 'com.oracle.database.xml:xmlparserv2:23.4.0.24.05'

	// Redis for caching
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// Password encoding
	implementation 'org.springframework.security:spring-security-crypto'

	// JSON processing
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// Utility libraries
	implementation 'org.apache.commons:commons-lang3:3.17.0'
	implementation 'org.apache.commons:commons-collections4:4.4'

	// Logging
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	// Lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Development tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
