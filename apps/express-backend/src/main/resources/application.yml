server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true

spring:
  application:
    name: winus-express-backend

  # Database Configuration
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521/FREE
    username: WINUSUSR
    password: WINUSUSR605
    hikari:
      # HikariCP 최적화 설정
      maximum-pool-size: 20              # 최대 커넥션 풀 크기
      minimum-idle: 5                    # 최소 유휴 커넥션 수
      connection-timeout: 30000          # 연결 시도 타임아웃 (30초)
      idle-timeout: 600000               # 유휴 커넥션 타임아웃 (10분)
      max-lifetime: 1800000              # 커넥션 최대 수명 (30분)
      pool-name: ExpressHikariCP            # 커넥션 풀 이름
      auto-commit: false                 # 자동 커밋 비활성화 (트랜잭션 성능 향상)
      connection-test-query: SELECT 1 FROM DUAL  # Oracle용 연결 테스트 쿼리
      validation-timeout: 5000           # 유효성 검사 타임아웃 (5초)
      leak-detection-threshold: 30000   # 연결 누수 감지 임계값 (30초)

  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.OracleDialect
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        format_sql: true
        show_sql: false
        use_sql_comments: true
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
        connection:
          provider_disables_autocommit: true

  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      password:
      database: 0
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # Jackson Configuration
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Seoul
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false

  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour

# Security Configuration
app:
  security:
    jwt:
      secret-key: vben-admin-jwt-secret-key-for-authentication-2025
      access-token-expiration: 1800000 # 30 minutes
      refresh-token-expiration: 604800000 # 7 days
    password:
      encoder-strength: 12

  # CORS Configuration
  cors:
    allowed-origins:
      - http://localhost:5666
      - http://localhost:3000
      - http://127.0.0.1:5666
    allowed-methods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
    allowed-headers:
      - "*"
    allow-credentials: true
    max-age: 3600

# Logging Configuration
logging:
  level:
    com.winus.express: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized

# Custom Application Properties
vben:
  admin:
    title: Vben Admin Backend
    version: 1.0.0
    description: Vue Vben Admin Backend API Server
    author: Vben Team

  # File Upload Configuration
  upload:
    path: /tmp/vben/uploads
    max-file-size: 10MB
    max-request-size: 50MB
    allowed-extensions:
      - jpg
      - jpeg
      - png
      - gif
      - pdf
      - doc
      - docx
      - xls
      - xlsx

  # System Configuration
  system:
    default-password: "123456"
    max-login-attempts: 5
    account-lock-duration: 300000 # 5 minutes
    captcha-enabled: true
